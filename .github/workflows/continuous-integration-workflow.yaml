name: Continuous Integration Workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests for ${{ matrix.os }} on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: gettsim
          auto-update-conda: true
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}

      - name: Run pytest.
        shell: bash -l {0}
        run: pytest --ignore=gettsim/dashboard/ --cov-report=xml --cov=./

      - name: Upload coverage report.
        if: runner.os == 'Linux' && matrix.python-version == '3.9'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run pre-commits.
        if: runner.os == 'Linux' && matrix.python-version == '3.9'
        shell: bash -l {0}
        run: |
          pre-commit install -f --install-hooks
          pre-commit run --all-files

  # run-jax-tests:

  #   name: Run jax tests on Linux
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: conda-incubator/setup-miniconda@v2
  #       with:
  #         auto-update-conda: true
  #         python-version: 3.9
  #         activate-environment: gettsim
  #         environment-file: environment_jax.yml

  #     - name: Run pytest on jax tests.
  #       shell: bash -l {0}
  #       run: pytest --ignore=gettsim/dashboard/ --cov-report=xml --cov=./

  #     - name: Upload coverage report.
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}