---
name: main

# Automatically cancel a previous run.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.11'
        include:
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'
    steps:
      - uses: actions/checkout@v3
      - name: Install conda environment with micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          extra-specs: python=${{ matrix.python-version }}
          cache-downloads: true

      - name: Run tests
        run: >-
          micromamba run -n gettsim pytest --ignore=dashboard/ --cov=./ --cov-report=xml

      - name: Upload coverage reports
        if: runner.os == 'Linux' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # run-jax-tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11"]

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install conda environment with micromamba
  #       uses: mamba-org/provision-with-micromamba@main
  #       with:
  #         environment-file: environment.yml
  #         extra-specs: python=${{ matrix.python-version }} jax
  #         cache-downloads: true

  #     - name: Run tests
  #       run: >-
  #         micromamba run -n gettsim pytest --ignore=dashboard/
  #         --cov=./ --cov-report=xml

  #     - name: Upload coverage reports
  #       if: runner.os == 'Linux' && matrix.python-version == '3.11'
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
