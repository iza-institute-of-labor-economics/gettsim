[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"


[tool.setuptools_scm]
write_to = "src/_gettsim/_version.py"


[tool.ruff]
target-version = "py39"
select = ["ALL"]
fix = true
extend-ignore = [
    "ICN001", # numpy should be np, but different convention here.
    # Docstrings
    "D103", # missing docstring in public function
    "D107",
    "D203",
    "D212",
    "D213",
    "D402",
    "D413",
    "D415",
    "D416",
    "D417",
    # Others.
    "D404",  # Do not start module docstring with "This".
    "RET504",  # unnecessary variable assignment before return.
    "S101",  # raise errors for asserts.
    "B905",  # strict parameter for zip that was implemented in py310.

    "ANN101",  # type annotating self
    "ANN102",  # type annotating cls
    "FBT",  # flake8-boolean-trap
    "EM",  # flake8-errmsg
    "ANN401",  # flake8-annotate typing.Any
    "PD",  # pandas-vet
    "E731",  # do not assign a lambda expression, use a def
    "RET", # unnecessary elif or else statements after return, rais, continue, ...
    "S324", # Probable use of insecure hash function.
    "COM812", # trailing comma missing, but black takes care of that
    "PT007", # wrong type in parametrize, gave false positives
    "DTZ001", # use of `datetime.datetime()` without `tzinfo` argument is not allowed
    "DTZ002", # use of `datetime.datetime.today()` is not allowed
    "PT012", # `pytest.raises()` block should contain a single simple statement
    "PLR5501", # elif not supported by Jax converter

    # Things we are not sure we want
    # ==============================
    "SIM102", # Use single if statement instead of nested if statements
    "SIM108", # Use ternary operator instead of if-else block
    "SIM117", # do not use nested with statements
    "BLE001", # Do not catch blind exceptions (even after handling some specific ones)
    "PLR2004", # Magic values used in comparison
    "PT006", # Allows only lists of tuples in parametrize, even if single argument

    # Things ignored during transition phase
    # ======================================
    "D",  # docstrings
    "ANN",  # missing annotations
    "C901",  # function too complex
    "PT011", # pytest raises without match statement
    "INP001", # implicit namespace packages without init.
]
exclude = []

[tool.ruff.per-file-ignores]
"src/_gettsim_tests/test_docs.py" = ["TRY"]
"src/_gettsim_tests/test_rounding.py" = ["PT019"]
"src/_gettsim/aggregation_numpy.py" = ["TRY"]
"src/_gettsim/benefits/elterngeld.py" = ["E501"]
"src/_gettsim/benefits/kinderzuschl.py" = ["ARG001"]
"src/_gettsim/benefits/unterhalt.py" = ["E501"]
"src/_gettsim/benefits/wohngeld.py" = ["ARG001"]
"src/_gettsim/config.py" = ["TRY"]
"src/_gettsim/functions.py" = ["F401"]
"src/_gettsim/functions_loader.py" = ["TRY"]
"src/_gettsim/gettsim_typing.py" = ["PGH", "PLR", "TRY", "SIM114"]
"src/_gettsim/interface.py" = ["TRY"]
"src/_gettsim/piecewise_functions.py" = ["PLR", "TRY"]
"src/_gettsim/policy_environment.py" = ["S506", "PLR", "TRY"]
"src/_gettsim/rente.py" = ["N806", "ARG001"]
"src/_gettsim/social_insurance_contributions/ges_krankenv.py" = ["SIM401"]
"src/_gettsim/synthetic.py" = ["TRY"]
"src/_gettsim/tax_transfer.py" = ["ARG001"]
"src/_gettsim/taxes/zu_versteuerndes_eink.py" = ["E501", "ARG001"]
"src/_gettsim/tests/test_tax_transfer.py" = ["E501"]
"src/_gettsim/visualization.py" = ["TRY", "PLR"]

[tool.ruff.pydocstyle]
convention = "numpy"


[tool.mypy]
files = ["src"]
check_untyped_defs = true
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "_gettsim_tests.*"
disallow_untyped_defs = false
ignore_errors = true

[[tool.mypy.overrides]]
module = "gettsim"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "_gettsim.*"
ignore_errors = true


[tool.nbqa.config]
black = "pyproject.toml"

[tool.nbqa.mutate]
black = 1

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:.*XMLParser*:DeprecationWarning",
    "ignore:.*'tree.iter()'*:PendingDeprecationWarning",
    "ignore:.*Sorting*:FutureWarning",
    "ignore:The TerminalReporter.writer attribute is",
    "ignore:Repeated execution of the test suite",
    "ignore:Using or importing the ABCs from 'collections'",
    "ignore:'grouped_cumsum' is deprecated.",
]
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]
norecursedirs = ["docs"]
testpaths = [
    "src/_gettsim_tests",
]

[tool.yamlfix]
line_length = 88
sequence_style = "block_style"
none_representation = "null"
