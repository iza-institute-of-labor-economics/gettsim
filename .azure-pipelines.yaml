# This file configures the test run on Azure Pipelines.

# More information on how to use Anaconda with Azure Pipelines can be found here:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/anaconda.

jobs:
- job:
  displayName: Linux
  pool:
    vmImage: "ubuntu-16.04"
  strategy:
    matrix:
      Python36:
        python.version: "3.6"
      Python37:
        python.version: "3.7"

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH.

  - bash: |
      pip uninstall -y setuptools
      conda install setuptools --yes --quiet
      conda update conda --yes --quiet
    displayName: Update conda.

  - bash: conda env create -n gettsim -f environment.yml
    displayName: Create Anaconda environment.

  - bash: |
      source activate gettsim
      pytest --cov-report xml --cov=./

  - bash: |
      source activate gettsim
      pre-commit install -f --install-hooks
      pre-commit run --all-files

  # The token is taken from environment variables.
  - script: bash <(curl https://codecov.io/bash) -t $(CODECOV_TOKEN)
    displayName: Upload coverage report.


- job:
  displayName: Windows
  pool:
    vmImage: "windows-2019"
  strategy:
    matrix:
      Python36:
        python.version: "3.6"
      Python37:
        python.version: "3.7"

  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH.

  - powershell: conda env create -n gettsim -f environment.yml
    displayName: Create Anaconda environment.

  - script: |
      call activate gettsim
      pytest


- job:
  displayName: MacOS
  pool:
    vmImage: "macOS-10.13"
  strategy:
    matrix:
      Python36:
        python.version: "3.6"
      Python37:
        python.version: "3.7"

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH.

  # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation
  # directory. We need to take ownership if we want to update conda or install packages
  # globally.
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation

  - bash: |
      pip uninstall -y setuptools
      conda install setuptools --yes --quiet
      conda update conda --yes --quiet
    displayName: Update conda.

  - bash: conda env create -n gettsim -f environment.yml
    displayName: Create Anaconda environment.

  - bash: |
      source activate gettsim
      pytest
